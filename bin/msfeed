#!/bin/sh -e
#L:
#L:  MIT License
#L:  
#l:  Bug reports, feature requests to gemini|https://harkadev.com/oss
#l:  Copyright (c) 2022 Harkaitz Agirre, harkaitz.aguirre@gmail.com
#L:
#L:  Permission is hereby granted, free of charge, to any person obtaining
#L:  a copy of this software and associated documentation files (the
#L:  "Software"), to deal in the Software without restriction, including
#L:  without limitation the rights to use, copy, modify, merge, publish,
#L:  distribute, sublicense, and/or sell copies of the Software, and to
#L:  permit persons to whom the Software is furnished to do so, subject to
#L:  the following conditions:
#L:
#L:  The above copyright notice and this permission notice shall be
#L:  included in all copies or substantial portions of the Software.
#L:
#L:  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
#L:  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
#L:  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
#L:  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
#L:  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
#L:  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
#L:  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#h: Usage: $0 ...
#h:
#h: ... [today]            : View latest news.
#h: ... save NAME CATEGORY : Save news in category.
msfeed() {
    local cmd="$1"
    shift
    case "${cmd}" in
        show)  msfeed_show_variables ;;
        today) msfeed_today "$@"     ;;
        save)  msfeed_save  "$@"     ;;
        *)     msfeed_error "Invalid subcommand: ${cmd}.";;
    esac
}
msfeed_show_variables() {
    printf '%-20s : %s\n' MSFEED_DIR   "${MSFEED_DIR}"
    printf '%-20s : %s\n' MSFEED_TODAY "${MSFEED_TODAY}"
}
msfeed_calc_variables() {
    MSFEED_DIR="${MSFEED_DIR:-${HOME}/.msfeed}"
    MSFEED_TODAY="${MSFEED_TODAY:-${MSFEED_DIR}/`date '+%Y-%m-%d'`}"
}
## -----------------------------------------------------------------------------
msfeed_save() {
    local name="$1" category="`printf '%s\n' "${2}" | tr '/' '-'`"
    if test ! -n "${name}";then
        msfeed_error "Please specify a name."
        return 1
    fi
    if test ! -n "${category}";then
        msfeed_error "Please specify a category."
        return 1
    fi
    msfeed_info "Updating ${MSFEED_TODAY}/${name}-${category} ..."
    mkdir -p "${MSFEED_TODAY}"
    sort -rn > "${MSFEED_TODAY}/${name}-${category}"
}
msfeed_today() {
    if test -d "${MSFEED_TODAY}";then
        sfeed_curses `find "${MSFEED_TODAY}" -type f`
    fi
}

## -----------------------------------------------------------------------------
msfeed_info()  { echo "${SCRNAME}: $*" >&2; }
msfeed_error() { msfeed_info "error: $*";   }
msfeed_calc_variables
SCRNAME="`basename "$0"`"
if test @"${SCRNAME}" = @"msfeed";then
    case "${1}" in
        -h|--help)
            sed -n 's/^ *#h: \{0,1\}//p' "$0" | sed "s|\\\$0|${SCRNAME}|g"
            echo ""
            sed -n 's/^ *#l: \{0,2\}//p' "$0"
            ;;
        '')
            msfeed today
            ;;
        *)
            msfeed "$@"
            ;;
    esac
fi
